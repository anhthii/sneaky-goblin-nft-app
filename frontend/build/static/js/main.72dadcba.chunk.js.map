{"version":3,"sources":["helpers/dev/general-helpers.js","store/web3Modal-init.js","store/all-context-interface.js","store/EthersProvider.js","components/ui/Message/Message.jsx","store/MessageNet.js","components/core/Connector/Connector.jsx","components/pages/Home/layouts/Navigation/index.jsx","components/ui/Crementor/Crementor.jsx","components/ui/PBButton/PBButton.jsx","components/pages/Home/layouts/Body/index.jsx","components/pages/Home/Home.jsx","helpers/hooks/useSignature.js","components/pages/JoinWhitelist/JoinWhitelist.jsx","App.js","index.js"],"names":["getAllLocalEnv","infuraId","process","contractAddress","REACT_APP_CONTRACT_ADDRESS","chainId","localEnv","providerOptions","walletconnect","package","WalletConnectProvider","options","web3Modal","Web3Modal","network","EthersContext","React","createContext","ethers","ethersProvider","MsgNetContext","setMsg","EthersProvider","children","askOnLoad","windowEth","window","ethereum","useContext","useState","isConnected","setIsConnected","userAddress","setUserAddress","setChainId","signer","setSigner","provider","setProvider","useEffect","a","switchNetworkHandler","onConnectHandler","connect","instance","providers","Web3Provider","getNetwork","getSigner","getAddress","address","message","toLowerCase","includes","onDisconnectHandler","request","method","params","ethersContextValue","useMemo","disconnect","switchNetwork","Provider","value","Message","data","slide","setSlide","show","setShow","type","setType","text","setMessage","duration","setDuration","setTimeout","onClick","className","MessageNet","showMessage","setShowMessage","messageData","setMessageData","setMsgHandler","errMsgNetContextValue","Connector","forceSwitch","connText","disconnText","bgColor","hoverBgColor","lineColor","hoverLineColor","lineSize","curve","textSpace","textSize","font","textColor","textWeight","height","width","isHover","setIsHover","defBtnStyle","setDefBtnStyle","borderRadius","letterSpacing","fontSize","fontFamily","fontWeight","padding","color","style","onMouseEnter","onMouseLeave","border","background","Navigation","Crementor","btnColor","hoverBtnColor","onDecrement","onIncrement","hasValue","setHasValue","isHoverDecreBtn","setIsHoverDecreBtn","isHoverIncreBtn","setIsHoverIncreBtn","PBButton","icon","iconColor","hoverIconColor","link","linkTarget","wordSpace","open","focus","marginLeft","Index","defValue","setDefValue","size","Home","useSignature","sigData","setSigData","signMessage","msg","receivedSigner","_signer","_address","signature","JoinWhitelist","requiredBal","msgToSign","setMsgToSign","onJoinHandler","userBalanceHelper","_userBal","Number","fDigit","parseFloat","toFixed","fetch","headers","body","JSON","stringify","res","json","receipt","status","signMsgHelper","getBalance","_balance","balance","utils","formatEther","placeholder","name","onChange","e","target","App","path","element","root","document","getElementById","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.72dadcba.chunk.js","sourcesContent":["// Deaults >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\nexport const isDev = () => {\n    if (process.env.REACT_APP_IS_LOCAL_DEVELOPMENT === '1') return true;\n    return false;\n};\n\nexport const getAllLocalEnv = () => {\n    return {\n        infuraId: process.env.REACT_APP_INFURA_ID,\n        contractAddress: process.env.REACT_APP_CONTRACT_ADDRESS,\n        chainId: process.env.REACT_APP_CHAIN_ID,\n    };\n};\n\n// Numbers >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\nexport const randomInteger = (min, max) => {\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n};\n\nexport const floatFixer = (num, fDigit) => {\n    return parseFloat(`${num}`).toFixed(fDigit);\n};\n","import Web3Modal from 'web3modal';\nimport WalletConnectProvider from '@walletconnect/web3-provider';\n// Utils\nimport { getAllLocalEnv } from '../helpers/dev/general-helpers';\n\n// Web3Modal setup with Ethers >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\nconst localEnv = getAllLocalEnv();\n\nconst providerOptions = {\n    walletconnect: {\n        package: WalletConnectProvider,\n        options: {\n            infuraId: localEnv.infuraId,\n        },\n    },\n};\n\nconst web3Modal = new Web3Modal({ network: 'mainnet', providerOptions });\n\nexport default web3Modal;\n","import React from 'react';\n\nexport const EthersContext = React.createContext({\n    ethers: null,\n    web3Modal: null,\n    ethersProvider: null,\n});\n\nexport const MsgNetContext = React.createContext({\n    setMsg: () => {},\n});\n","import React, { useMemo, useEffect, useState, useContext } from 'react';\nimport { ethers } from 'ethers';\n\n// Web3Modal Initialization\nimport web3Modal from './web3Modal-init';\n\n// Ethers context\nimport { EthersContext, MsgNetContext } from './all-context-interface';\n\n// Utils\nimport { getAllLocalEnv } from '../helpers/dev/general-helpers';\n\n// Main component **********************************************************************\nconst EthersProvider = ({ children, askOnLoad = true }) => {\n    const windowEth = window.ethereum;\n    const localEnv = getAllLocalEnv();\n    const { setMsg } = useContext(MsgNetContext);\n\n    // States >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\n    const [isConnected, setIsConnected] = useState(false);\n    const [userAddress, setUserAddress] = useState(null);\n    const [chainId, setChainId] = useState(null);\n    const [signer, setSigner] = useState(null);\n    const [provider, setProvider] = useState(null);\n\n    // Effects >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\n    useEffect(() => {\n        if (windowEth) {\n            // If true then ask to change to Eth chain\n            if (askOnLoad) {\n                (async () => {\n                    await switchNetworkHandler();\n                })();\n            }\n        } else {\n            setMsg('Please consider installing Metamask.', 'warning');\n        }\n    }, []);\n\n    // Handlers >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\n    const onConnectHandler = async () => {\n        try {\n            const instance = await web3Modal.connect();\n            const provider = new ethers.providers.Web3Provider(instance);\n            const { chainId } = await provider.getNetwork();\n            const signer = await provider.getSigner();\n            const address = await signer.getAddress();\n\n            setUserAddress(address);\n            setChainId(chainId);\n            setProvider(provider);\n            setSigner(signer);\n            setIsConnected(true);\n\n            return { provider, address, chainId, signer };\n        } catch ({ message }) {\n            if (!message) return null;\n\n            const errorMsg = message.toLowerCase();\n            if (errorMsg.includes('user rejected')) {\n                setMsg('Wallet connection was cancelled!', 'warning');\n            } else {\n                setMsg(message, 'warning');\n            }\n\n            return null;\n        }\n    };\n\n    const onDisconnectHandler = async () => {\n        await setUserAddress(null);\n        await setChainId(null);\n        await setProvider(null);\n        await setIsConnected(false);\n    };\n\n    const switchNetworkHandler = async (network = localEnv.chainId) => {\n        try {\n            await windowEth.request({\n                method: 'wallet_switchEthereumChain',\n                params: [{ chainId: network }],\n            });\n        } catch (e) {\n            setMsg('Please connect to the Ethereum network', 'warning');\n        }\n    };\n\n    // Ethers Context Value >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\n    const ethersContextValue = useMemo(\n        () => ({\n            ethers,\n            web3Modal,\n            address: userAddress,\n            chainId,\n            provider,\n            signer,\n            isConnected,\n            ethersProvider: {\n                connect: onConnectHandler,\n                disconnect: onDisconnectHandler,\n                switchNetwork: switchNetworkHandler,\n            },\n        }),\n        [ethers, web3Modal, userAddress, chainId, provider, signer, isConnected]\n    );\n\n    return <EthersContext.Provider value={ethersContextValue}>{children}</EthersContext.Provider>;\n};\n\nexport default EthersProvider;\n","import React, { useState, useEffect } from 'react';\n\nimport './Message.css';\n\nconst Message = ({ data }) => {\n    const [slide, setSlide] = useState(false);\n    const [show, setShow] = useState(false);\n    const [type, setType] = useState(data.type || '');\n    const [message, setMessage] = useState(data.text || '');\n    const [duration, setDuration] = useState(data.duration || 2700);\n\n    useEffect(() => {\n        (() => {\n            if (data) {\n                setShow(false);\n                setShow(true);\n\n                setType(data.type);\n                setMessage(data.text);\n                setDuration(data.duration);\n\n                setTimeout(() => {\n                    setSlide(true);\n                }, 250);\n\n                setTimeout(() => {\n                    setSlide(false);\n                }, 300 + duration);\n            }\n        })();\n    }, []);\n\n    const onClickMessageHelper = () => {\n        setTimeout(() => {\n            setShow(false);\n        }, 200);\n    };\n\n    return (\n        <div>\n            {data && show && (\n                <div\n                    onClick={onClickMessageHelper}\n                    className={`message-wrap ${slide ? 'slide-down' : ''}`}\n                >\n                    <p className={type === 'warning' ? 'warning' : 'success'}>{message}</p>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default Message;\n","import React, { useState, useMemo } from 'react';\n\n// Context\nimport { MsgNetContext } from './all-context-interface';\n\n// Components\nimport Message from '../components/ui/Message/Message';\n\nconst MessageNet = ({ children }) => {\n    // States >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\n    const [showMessage, setShowMessage] = useState(false);\n    const [messageData, setMessageData] = useState(null);\n\n    // Handlers >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\n    const setMsgHandler = async (text, type, duration = 3700) => {\n        await setShowMessage(false);\n        await setMessageData(null);\n        await setShowMessage(true);\n        await setMessageData({ text, type, duration });\n        setTimeout(() => {\n            setShowMessage(false);\n        }, 1000 + duration);\n    };\n\n    // Ethers Context Value >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\n    const errMsgNetContextValue = useMemo(\n        () => ({\n            setMsg: setMsgHandler,\n        }),\n        [showMessage, messageData]\n    );\n\n    return (\n        <MsgNetContext.Provider value={errMsgNetContextValue}>\n            {children}\n            {showMessage && messageData !== null && <Message data={messageData} />}\n        </MsgNetContext.Provider>\n    );\n};\n\nexport default MessageNet;\n","import React, { useContext, useState, useEffect } from 'react';\n\nimport { EthersContext } from '../../../store/all-context-interface';\n\n// Style\nimport './Connector.scss';\n\nconst Connector = ({\n    forceSwitch = true,\n    network = '0x1',\n    connText = 'CONNECT',\n    disconnText = 'DISCONNECT',\n    bgColor = '#5e356c',\n    hoverBgColor = '#2d996c',\n    lineColor = '#b3bdb3',\n    hoverLineColor = '#dae7da',\n    lineSize = 1,\n    curve = 23,\n    textSpace = 2,\n    textSize = 1.3,\n    font = 'Helvetica',\n    textColor = 'white',\n    textWeight = 700,\n    height = 12,\n    width = 210,\n}) => {\n    const { ethersProvider } = useContext(EthersContext);\n\n    // State\n    const [isConnected, setIsConnected] = useState(false);\n    const [isHover, setIsHover] = useState(false);\n    const [defBtnStyle, setDefBtnStyle] = useState({});\n\n    // Effects\n    useEffect(() => {\n        setDefBtnStyle({\n            borderRadius: `${curve}px`,\n            letterSpacing: `${textSpace}px`,\n            fontSize: `${textSize}em`,\n            fontFamily: `${font}`,\n            fontWeight: textWeight,\n            padding: `${height}px 0px`,\n            color: textColor,\n        });\n    }, []);\n\n    // Handlers\n    const onConnectHandler = async () => {\n        const data = await ethersProvider.connect();\n        if (data) await setIsConnected(true);\n        if (!data) await setIsConnected(false);\n        // Force switch to Ethereum after connecting, default: 0x1\n        if (data && forceSwitch) await ethersProvider.switchNetwork(network);\n    };\n\n    const onDisconnectHandler = async () => {\n        await ethersProvider.disconnect();\n        await setIsConnected(false);\n    };\n\n    return (\n        <div className=\"_connector-wrap\" style={{ width: `${width}px` }}>\n            {isConnected ? (\n                <button\n                    onMouseEnter={() => setIsHover(true)}\n                    onMouseLeave={() => setIsHover(false)}\n                    style={{\n                        ...defBtnStyle,\n                        border: `${lineSize}px solid ${isHover ? hoverLineColor : lineColor}`,\n                        background: isHover ? hoverBgColor : bgColor,\n                    }}\n                    className=\"connector\"\n                    onClick={onDisconnectHandler}\n                >\n                    {disconnText}\n                </button>\n            ) : (\n                <button\n                    onMouseEnter={() => setIsHover(true)}\n                    onMouseLeave={() => setIsHover(false)}\n                    style={{\n                        ...defBtnStyle,\n                        border: `${lineSize}px solid ${isHover ? hoverLineColor : lineColor}`,\n                        background: isHover ? hoverBgColor : bgColor,\n                    }}\n                    className=\"connector\"\n                    onClick={onConnectHandler}\n                >\n                    {connText}\n                </button>\n            )}\n        </div>\n    );\n};\n\nexport default Connector;\n","import React from 'react';\n\n// Components\nimport Connector from '../../../../core/Connector/Connector';\n\n// Styles\nimport './Navigation.scss';\n\nconst Navigation = () => {\n    return (\n        <div className=\"_navigation container\">\n            <header className=\"d-flex flex-wrap align-items-center justify-content-center justify-content-md-between py-3 mb-4\">\n                <div className=\"brand d-flex align-items-center col-md-3 mb-2 mb-md-0 text-dark\">\n                    Sneaky Goblins\n                </div>\n\n                <ul className=\"nav col-12 col-md-auto mb-2 justify-content-center mb-md-0\">\n                    <li />\n                </ul>\n\n                <div className=\"col-md-3 text-end\">\n                    <Connector bgColor=\"#cbac87\" hoverBgColor=\"#ab9882\" />\n                </div>\n            </header>\n        </div>\n    );\n};\n\nexport default Navigation;\n","import React, { useEffect, useState } from 'react';\n\n// Styles\nimport './Crementor.scss';\n\nconst Crementor = ({\n    value = 0,\n    width = 300,\n    height = 10,\n    curve = 50,\n    bgColor = '#2b3b5e',\n    lineColor = '#818181',\n    hoverLineColor = '#ac9595',\n    btnColor = '#dbdbdb',\n    hoverBtnColor = '#98ea9a',\n    onDecrement,\n    onIncrement,\n}) => {\n    // State\n    const [hasValue, setHasValue] = useState(false);\n    const [isHoverDecreBtn, setIsHoverDecreBtn] = useState(false);\n    const [isHoverIncreBtn, setIsHoverIncreBtn] = useState(false);\n    const [isHover, setIsHover] = useState(false);\n\n    // Effects\n    useEffect(() => {\n        if (value === 0) setHasValue(false);\n        if (value > 0) setHasValue(true);\n    }, [value]);\n\n    // Handlers\n    const onIncrementHandler = () => onIncrement();\n    const onDecrementHandler = () => onDecrement();\n\n    return (\n        <div\n            onMouseEnter={() => setIsHover(true)}\n            onMouseLeave={() => setIsHover(false)}\n            className=\"_crementor\"\n            style={{\n                background: bgColor,\n                border: `1px solid ${isHover ? hoverLineColor : lineColor}`,\n                borderRadius: `${curve}px`,\n                width: width > 240 ? `${width}px` : `240px`,\n                padding: `${height}px 0px`,\n            }}\n        >\n            <div className=\"container\">\n                <div className=\"row\">\n                    <button\n                        onMouseEnter={() => setIsHoverDecreBtn(true)}\n                        onMouseLeave={() => setIsHoverDecreBtn(false)}\n                        style={{ color: isHoverDecreBtn ? hoverBtnColor : btnColor }}\n                        className=\"col decre\"\n                        onClick={onDecrement}\n                    >\n                        -\n                    </button>\n                    <div className={`col value ${hasValue ? 'has-value' : 'no-value'}`}>\n                        {value}\n                    </div>\n                    <button\n                        onMouseEnter={() => setIsHoverIncreBtn(true)}\n                        onMouseLeave={() => setIsHoverIncreBtn(false)}\n                        style={{ color: isHoverIncreBtn ? hoverBtnColor : btnColor }}\n                        className=\"col incre\"\n                        onClick={onIncrement}\n                    >\n                        +\n                    </button>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Crementor;\n","import React, { useState } from 'react';\n\n// Styles\nimport './PBButton.scss';\n\nconst PBButton = ({\n    curve = 7,\n    icon = null,\n    iconColor = 'white',\n    hoverIconColor = '#98ea9a',\n    link = null,\n    linkTarget = '_blank',\n    text = 'Pop Block',\n    lineColor = '#5e5e5e',\n    hoverLineColor = '#716e6e',\n    lineSize = 1,\n    bgColor = '#a276bf3b',\n    hoverBgColor = '#694A7D3B',\n    textColor = 'white',\n    textWeight = 600,\n    textSize = 1.3,\n    textSpace = 0,\n    font = 'Helvetica',\n    wordSpace = 3,\n    width = 15,\n    height = 48,\n    style = null,\n    method = null,\n}) => {\n    // State\n    const [isHover, setIsHover] = useState(false);\n\n    // Handler\n    const onClickLinkHandler = () => {\n        if (!link && !method) return;\n\n        if (method) {\n            method();\n            return;\n        }\n\n        // If link\n        window.open(link, linkTarget).focus();\n    };\n\n    return (\n        <div className=\"_pbButton\">\n            <button\n                onClick={onClickLinkHandler}\n                onMouseEnter={() => setIsHover(true)}\n                onMouseLeave={() => setIsHover(false)}\n                style={{\n                    ...(style && { ...style }),\n                    borderRadius: `${curve}px`,\n                    border: `${lineSize}px solid ${isHover ? hoverLineColor : lineColor}`,\n                    background: isHover ? hoverBgColor : bgColor,\n                    color: textColor,\n                    fontWeight: textWeight,\n                    fontSize: `${textSize}em`,\n                    letterSpacing: `${textSpace}px`,\n                    padding: `0px ${width}px`,\n                    height: `${height}px`,\n                }}\n            >\n                {icon && (\n                    <span style={{ color: isHover ? hoverIconColor : iconColor }}>{icon}</span>\n                )}{' '}\n                <span style={{ fontFamily: font, marginLeft: `${wordSpace}px` }}>{text}</span>\n            </button>\n        </div>\n    );\n};\n\nexport default PBButton;\n","import React, { useState } from 'react';\nimport { GiCeremonialMask } from 'react-icons/gi';\n\n// Components\nimport Crementor from '../../../../ui/Crementor/Crementor';\nimport PBButton from '../../../../ui/PBButton/PBButton';\n\n// Styles & Assets\nimport './Body.scss';\n\nconst Index = () => {\n    // States >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\n    const [defValue, setDefValue] = useState(0);\n\n    // Handlers >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\n    const onIncrementHandler = () => {\n        setDefValue(defValue + 1);\n    };\n\n    const onDecrementHandler = () => {\n        if (defValue === 0) return;\n        setDefValue(defValue - 1);\n    };\n\n    return (\n        <div className=\"_body\">\n            <div className=\"px-4 py-5 my-5 text-center\">\n                <h1 className=\"display-5 fw-bold\" style={{ color: '#1c1c1c' }}>\n                    Sneaky Goblins Frontend\n                </h1>\n                <div className=\"col-lg-6 mx-auto\">\n                    <p className=\"lead mb-4\" style={{ color: '#121111' }}>\n                        Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod\n                        tempor.\n                    </p>\n                    <br />\n                    <br />\n\n                    <div className=\"d-grid gap-2 d-sm-flex justify-content-sm-center\">\n                        <Crementor\n                            value={defValue}\n                            bgColor=\"#2b3b5e\"\n                            lineColor=\"#818181\"\n                            onIncrement={onIncrementHandler}\n                            onDecrement={onDecrementHandler}\n                        />\n                    </div>\n\n                    <br />\n\n                    <div className=\"d-grid gap-2 d-sm-flex justify-content-sm-center\">\n                        <PBButton\n                            text=\"mint\"\n                            textSpace={1}\n                            textWeight={700}\n                            bgColor=\"#2b3b5dd9\"\n                            icon={<GiCeremonialMask size={22} />}\n                        />\n                    </div>\n                </div>\n            </div>\n\n            <br />\n            <br />\n            <br />\n            <br />\n            <br />\n        </div>\n    );\n};\n\nexport default Index;\n","import React from 'react';\n\n// Layout Components\nimport Navigation from './layouts/Navigation';\nimport Body from './layouts/Body';\n\nconst Home = () => {\n    return (\n        <>\n            <Navigation />\n            <Body />\n        </>\n    );\n};\n\nexport default Home;\n","import { useContext, useState } from 'react';\nimport { EthersContext } from '../../store/all-context-interface';\n\nconst useSignature = () => {\n    const { address, signer } = useContext(EthersContext);\n    const [sigData, setSigData] = useState({});\n\n    const signMessage = async (msg, receivedSigner = null) => {\n        if (!msg || msg === '') {\n            setSigData({});\n            return;\n        }\n\n        // Defaults\n        const _signer = receivedSigner || (signer && signer);\n        const _address = receivedSigner ? await _signer.getAddress() : address;\n\n        // Signing the message\n        const signature = await _signer.signMessage(msg);\n\n        await setSigData({\n            ...sigData,\n            signature,\n            address: _address,\n            message: msg,\n        });\n    };\n\n    return { sigData, signMessage };\n};\n\nexport default useSignature;\n","import React, { useContext, useState, useEffect } from 'react';\n\n// Components\nimport Navigation from '../Home/layouts/Navigation';\nimport PBButton from '../../ui/PBButton/PBButton';\n\n// Utils\nimport useSignature from '../../../helpers/hooks/useSignature';\nimport { EthersContext, MsgNetContext } from '../../../store/all-context-interface';\nimport { floatFixer } from '../../../helpers/dev/general-helpers';\n\n// Styles\nimport './JoinWhitelist.scss';\n\nconst JoinWhitelist = () => {\n    const { setMsg } = useContext(MsgNetContext);\n    const { sigData, signMessage } = useSignature();\n    const { ethers, provider, address, isConnected } = useContext(EthersContext);\n\n    // States >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\n    const [requiredBal] = useState(0.15);\n    const [msgToSign, setMsgToSign] = useState('');\n\n    // Effects >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\n    useEffect(() => {\n        if (isConnected && sigData) {\n            (async () => {\n                await onJoinHandler();\n            })();\n        }\n    }, [sigData]);\n\n    // Handlers >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\n    const onChangeHandler = (e) => {\n        const { value } = e.target;\n        setMsgToSign(value);\n    };\n\n    const onJoinHandler = async () => {\n        const _userBal = await userBalanceHelper();\n        const userBal = Number(floatFixer(_userBal, 2));\n\n        if (userBal < requiredBal) {\n            setMsg(`You must have at least ${requiredBal} ETH to join!`, 'warning');\n            return;\n        }\n\n        if (sigData) {\n            try {\n                const res = await fetch('/api/whitelist/join', {\n                    method: 'post',\n                    headers: { 'Content-Type': 'application/json' },\n                    body: JSON.stringify(sigData),\n                });\n                const receipt = await res.json();\n                if (receipt.status === 'failed') {\n                    setMsg(receipt.message, 'warning');\n                } else {\n                    setMsg('Successfully Registered!', 'success');\n                }\n            } catch (e) {\n                setMsg('Too many requests!', 'warning');\n            }\n        }\n    };\n\n    // Helpers >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\n    const signMsgHelper = async () => {\n        if (!isConnected) {\n            setMsg('Please connect your wallet!', 'warning');\n            return;\n        }\n        if (msgToSign === '') {\n            setMsg('Message is empty', 'warning');\n            return;\n        }\n\n        await signMessage(msgToSign);\n    };\n\n    const userBalanceHelper = async () => {\n        const _balance = await provider.getBalance(address);\n        const balance = ethers.utils.formatEther(_balance);\n        return balance;\n    };\n\n    return (\n        <>\n            <Navigation />\n\n            <div className=\"_join-whitelist\">\n                <div className=\"py-5 text-center\">\n                    <input\n                        type=\"text\"\n                        placeholder=\"Message\"\n                        name=\"message\"\n                        onChange={onChangeHandler}\n                    />\n                </div>\n\n                <div className=\"d-grid gap-2 d-sm-flex justify-content-sm-center\">\n                    <PBButton\n                        text=\"Register\"\n                        textSpace={1}\n                        textWeight={700}\n                        bgColor=\"#2b3b5dd9\"\n                        method={signMsgHelper}\n                    />\n                </div>\n            </div>\n        </>\n    );\n};\n\nexport default JoinWhitelist;\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\n\n// Components\nimport EthersProvider from './store/EthersProvider';\nimport MessageNet from './store/MessageNet';\nimport HomePage from './components/pages/Home/Home';\nimport JoinWhitelist from './components/pages/JoinWhitelist/JoinWhitelist';\n\n// Styles\nimport './styles/main.scss';\n\nfunction App() {\n    return (\n        <MessageNet>\n            <EthersProvider askOnLoad={false}>\n                <Router>\n                    <Routes>\n                        <Route path=\"/\" element={<HomePage />} />\n                        <Route path=\"/join-whitelist\" element={<JoinWhitelist />} />\n                    </Routes>\n                </Router>\n            </EthersProvider>\n        </MessageNet>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nconst root = document.getElementById('root');\nif (root !== null) {\n    ReactDOM.render(\n        <React.StrictMode>\n            <App />\n        </React.StrictMode>,\n        root\n    );\n}\n"],"sourceRoot":""}